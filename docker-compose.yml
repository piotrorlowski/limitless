# limitless Development Docker Compose

services:
  proxy:
    image: nginx:1.23-alpine
    ports:
      - 8000:80
    volumes:
      - static_files:/var/opt/limitless/static/
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./:/usr/src/limitless/
    depends_on:
      - webapp
    networks:
      - internal
    restart: "no"

  webapp:
    build:
      context: ./
      dockerfile: docker/backend.dockerfile
      target: backend
    command: manage.py runserver 0.0.0.0:8000
    expose:
      - 80
    environment:
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}

      - DJANGO_DATABASE_HOST=${DATABASE_HOST}
      - DJANGO_DATABASE_USER=${DATABASE_USER}
      - DJANGO_DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DJANGO_DATABASE_NAME=${DATABASE_NAME}
    env_file:
      - .env
    networks:
      - internal
    volumes:
      - ./:/usr/src/limitless/
      - static_files:/var/opt/limitless/static/
    restart: "no"

  vite:
    image: node:18.12-alpine3.16
    command: >
      sh -c "
        npm install &&
        npm cache clean --force &&
        npm run dev
      "
    ports:
      - 3000:3000
    working_dir: /usr/src/limitless/frontend/
    volumes:
      - ./:/usr/src/limitless/
    restart: "no"

  database:
    image: postgres:14-alpine
    expose:
      - 5432
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - internal
    restart: "no"

volumes:
  build:
  static_files:
  db_data:

networks:
  internal:
